{"version":3,"sources":["components/Header.js","components/Formulario.js","actions/turnosActions.js","actions/types.js","components/Turno.js","reducers/reducerTurnos.js","reducers/index.js","store.js","components/ListaTurnos.js","components/App.js","serviceWorker.js","index.js"],"names":["Header","props","className","titulo","Formulario","state","error","mascotaRef","React","createRef","duenioRef","fechaRef","horaRef","sintomasRef","enviarFormulario","e","preventDefault","nuevoTurno","id","uuid","mascota","current","value","duenio","fecha","hora","sintomas","validarTurno","addTurno","this","setState","existeError","onSubmit","ref","type","placeholder","Component","connect","turnos","turno","payload","Turno","eliminarTurno","deleteTurno","onClick","initialState","combineReducers","action","filter","middleware","thunk","storageState","localStorage","getItem","JSON","parse","store","createStore","reducerPrincial","compose","applyMiddleware","window","__REDUX_DEVTOOLS_EXTENSION__","subscribe","console","log","setItem","stringify","getState","ListaTurnos","getTurnos","hayCitas","Object","keys","length","map","key","eliminar","App","idTurno","turnosSt","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5eb14cc1.chunk.js","sourcesContent":["import React from 'react';\n\nconst Header = props => {\n    return ( \n        <header className=\"text-center\"> \n            <h1> {props.titulo}  </h1>\n        </header>\n     );\n}\n \nexport default Header;","import React, { Component } from 'react';\nimport uuid from 'uuid';\n\n//redux\nimport { connect } from 'react-redux'\nimport {addTurno} from '../actions/turnosActions'\n\nclass Formulario extends Component {\n   \n   \n    state = { \n        error: false\n    }\n\n    mascotaRef = React.createRef()\n    duenioRef = React.createRef()\n    fechaRef = React.createRef()\n    horaRef = React.createRef()\n    sintomasRef = React.createRef()\n\n    validarTurno(nuevoTurno) {\n        if( nuevoTurno.mascota === ''\n        || nuevoTurno.duenio === '' \n        || nuevoTurno.fecha === '' \n        || nuevoTurno.hora === '' \n        || nuevoTurno.sintomas === '' \n        ) {\n            this.setState({\n                error:true\n            })\n\n            return false\n        }\n\n        return true\n    }\n\n\n    enviarFormulario = (e) => {\n        e.preventDefault()\n\n        const nuevoTurno = {\n            id: uuid(),\n            mascota : this.mascotaRef.current.value,\n            duenio : this.duenioRef.current.value,\n            fecha : this.fechaRef.current.value,\n            hora : this.horaRef.current.value,\n            sintomas : this.sintomasRef.current.value\n        }\n\n        if(this.validarTurno(nuevoTurno)) {\n            //e.currentTarget.reset()\n            this.props.addTurno(nuevoTurno)\n\n        }\n    }\n\n    render() { \n\n        const existeError = this.state.error\n\n\n        return (  \n            <div className=\"card mt-5\">\n                <div className=\"card-body\">\n                    <h2 className=\"card-title text-center mb-5\"> Agregar Turno</h2>\n\n                    <form onSubmit={this.enviarFormulario}>\n                        <div className=\"form-group row\">\n                            <label className=\"col-sm-4 col-lg-2 col-form-label\">Nombre Mascota</label>\n                            <div className=\"col-sm-8 col-lg-10\">\n                                <input ref={this.mascotaRef} type=\"text\" className=\"form-control\" placeholder=\"Nombre Mascota\" />\n                            </div>\n                        </div>\n\n                        <div className=\"form-group row\">\n                            <label className=\"col-sm-4 col-lg-2 col-form-label\">Nombre Dueño</label>\n                            <div className=\"col-sm-8 col-lg-10\">\n                                <input ref={this.duenioRef} type=\"text\" className=\"form-control\"  placeholder=\"Nombre Dueño de la Mascota\" />\n                            </div>\n                        </div>\n\n                        <div className=\"form-group row\">\n                            <label className=\"col-sm-4 col-lg-2 col-form-label\">Fecha</label>\n                            <div className=\"col-sm-8 col-lg-4  mb-4 mb-lg-0\">\n                                <input ref={this.fechaRef} type=\"date\" className=\"form-control\" />\n                            </div>                            \n\n                            <label className=\"col-sm-4 col-lg-2 col-form-label\">Hora</label>\n                            <div className=\"col-sm-8 col-lg-4\">\n                                <input ref={this.horaRef} type=\"time\" className=\"form-control\" />\n                            </div>\n                        </div>\n\n                        <div className=\"form-group row\">\n                            <label className=\"col-sm-4 col-lg-2 col-form-label\">Sintomas</label>\n                            <div className=\"col-sm-8 col-lg-10\">\n                                <textarea ref={this.sintomasRef} className=\"form-control\"></textarea>\n                            </div>\n                        </div>\n\n                        <div className=\"form-group row justify-content-end\">\n                            <div className=\"col-sm-3\">\n                                <button type=\"submit\" className=\"btn btn-success w-100\">Agregar</button>\n                            </div>\n                        </div>\n                    </form>\n\n                    { existeError ? <div className='alert alert-danger text-center'>\n                                        Todos los campos son obligatorios\n                                    </div>\n                     : ''\n                     }\n                                \n\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    turnos: state.turnos.turnos\n})\n \nexport default connect(mapStateToProps,{addTurno}) (Formulario);","import { MOSTRAR_TURNOS, AGREGAR_TURNO, BORRAR_TURNO} from './types'\n\nexport const getTurnos = () => {\n    return {\n        type: MOSTRAR_TURNOS\n    }\n}\n\nexport const addTurno = (turno) => {\n    return {\n        type: AGREGAR_TURNO,\n        payload: turno\n    }\n}\n\nexport const deleteTurno = (id) => {\n    return {\n        type: BORRAR_TURNO,\n        payload: id\n    }\n}","export const MOSTRAR_TURNOS = 'MOSTRAR_TURNOS';\nexport const AGREGAR_TURNO = 'AGREGAR_TURNOS';\nexport const BORRAR_TURNO = ' BORRAR_CITA';\n\n// Validar el formulario\n\nexport const VALIDAR_FORMULARIO = 'VALIDAR_FORMULARIO'\nexport const MOSTRAR_ERROR = 'VALIDAR_FORMULARIO'","import React, { Component } from 'react';\n\n//redux\n\nimport {connect} from 'react-redux'\nimport {deleteTurno} from '../actions/turnosActions'\n\nclass Turno extends Component {\n\n    eliminarTurno = () => {\n\n        this.props.deleteTurno(this.props.turno.id)\n    }\n\n    render() {\n\n        const {mascota,duenio,fecha,hora,sintomas} = this.props.turno\n        return (  \n            <div className=\"media mt-3\">\n                <div className=\"media-body\">\n                    <h4 className=\"mt-0\"> Nombre Mascota: {mascota} </h4>\n                    <p className=\"card-text\"> <span> Nombre del Dueño: {duenio} </span> </p>\n                    <p className=\"card-text\"> <span> Fecha: {fecha} </span> </p>\n                    <p className=\"card-text\"> <span> Hora: {hora} </span> </p>\n                    <p className=\"card-text\"> <span> Sintomas: {sintomas} </span> </p>\n                    <p className=\"card-text\"> </p>\n\n                    <button className=\"btn btn-danger\" onClick={this.eliminarTurno}>\n                        Borrar\n                    </button>\n\n                </div>\n            </div>\n        );\n    }\n}\n \nexport default connect(null, {deleteTurno}) (Turno);","import {MOSTRAR_TURNOS,BORRAR_TURNO,AGREGAR_TURNO} from '../actions/types'\n\n// todo reducer tiene su propio state\n\nconst initialState = {\n    turnos : [],\n}\n\nexport default function(state = initialState, action) {\n    switch(action.type) {\n        case MOSTRAR_TURNOS: \n            return {\n                ...state\n            }\n        case AGREGAR_TURNO: \n            return {\n                ...state,\n                turnos : [...state.turnos, action.payload]\n            }\n        case BORRAR_TURNO: \n            return {\n                ...state,\n                turnos : state.turnos.filter( turno => ( turno.id !== action.payload) )\n            }\n        default: \n            return state\n    }\n}","import { combineReducers } from 'redux'\n\nimport turnosReducer from './reducerTurnos'\n\nexport default combineReducers({\n    turnos: turnosReducer\n})","import {createStore,applyMiddleware,compose} from 'redux'\n\nimport thunk from 'redux-thunk'\n\nimport reducerPrincial from './reducers'\n\nconst initialState = {}\n\nconst middleware = [thunk];\n\n// agrego local storage\n\nconst storageState = localStorage.getItem('turnos') ? JSON.parse(localStorage.getItem('turnos')) : []\n\nconst store = createStore(reducerPrincial,storageState,compose(applyMiddleware(...middleware),\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n\n))\n\nexport default store;","import React, { Component } from 'react';\nimport Turno from './Turno'\n\n//redux\nimport { connect } from 'react-redux'\nimport { getTurnos } from '../actions/turnosActions'\n\nimport store from '../store'\n\nstore.subscribe( () => {\n    console.log(\"Me ejecute\")\n    localStorage.setItem('turnos', JSON.stringify(store.getState()))\n})\n\nclass ListaTurnos extends Component {\n\n    componentDidMount() {\n        this.props.getTurnos();\n    }\n\n    render() { \n\n        const turnos = this.props.turnos\n\n        const hayCitas = Object.keys(turnos).length\n\n        return (  \n            <div className=\"card mt-5\">\n                <div className=\"card-body\">\n                    <h2 className=\"card-title text-center\">  { hayCitas ? (\"Administra tus turnos\") : \"No hay turnos\"} </h2>\n\n                    <div className=\"lista-citas\">\n                    {\n                        Object.keys(turnos).map( key => (\n                                <Turno \n                                    key = {key}\n                                    turno= {turnos[key]}\n                                    eliminar= {this.props.eliminar}\n                                /> \n                        )\n                        )\n                    }\n\n                    </div>\n\n                </div>\n\n              \n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ( {\n    turnos: state.turnos.turnos\n})\n \nexport default connect(mapStateToProps, {getTurnos}) (ListaTurnos);","import React, { Component } from 'react';\nimport Header from './Header'\nimport Formulario from './Formulario'\nimport ListaTurnos from './ListaTurnos'\n\n//redux \nimport { Provider } from 'react-redux'\nimport store from '../store'\n\nclass App extends Component {\n\n  componentDidUpdate() {\n    localStorage.setItem(\n      'turnos',\n      JSON.stringify(this.state.turnos)\n    )\n  }\n\n  componentDidMount() {\n   \n    const turnosSt = localStorage.getItem('turnos')\n\n    if(turnosSt) {\n        this.setState({\n        turnos: JSON.parse(turnosSt)\n      })\n    }\n\n\n  }\n\n  eliminar = (idTurno) => {\n       const turnosActuales =[...this.state.turnos] \n\n       const turnos = turnosActuales.filter( turno => ( turno.id !== idTurno) )\n\n       this.setState({\n         turnos\n       })\n  }\n\n  render() { \n    return (   \n      <Provider store={store}>\n        <div className=\"container\">\n          <Header\n            titulo={\"Administrador de turnos\"}\n          />\n          \n          <div className=\"row\">\n              <div className=\"col-md-6\">\n                <Formulario\n                />\n              </div>\n\n              <div className=\"col-md-6\">\n                  <ListaTurnos\n                  />\n              </div>\n          </div>\n        </div>\n      </Provider>\n    );\n  }\n}\n \nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}